/**
 * generated by Xtext 2.19.0
 */
package de.sos.generator.csharp;

import de.sos.generator.csharp.CSharpInterfaceGenerator;
import de.sos.generator.csharp.CSharpStructGenerator;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class CSharpGenerator extends AbstractGenerator {
  public static class CSharpOptions {
    public final String namespace;
    
    public final boolean generateForUnity;
    
    public CSharpOptions(final String ns, final boolean gfu) {
      this.namespace = ns;
      this.generateForUnity = gfu;
    }
  }
  
  private final CSharpGenerator.CSharpOptions options;
  
  public CSharpGenerator() {
    this(new CSharpGenerator.CSharpOptions("", false));
  }
  
  public CSharpGenerator(final CSharpGenerator.CSharpOptions opt) {
    this.options = opt;
  }
  
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    final CSharpStructGenerator strGen = new CSharpStructGenerator(this.options);
    strGen.doGenerate(resource, fsa, context);
    final CSharpInterfaceGenerator ifaceGen = new CSharpInterfaceGenerator(this.options);
    ifaceGen.doGenerate(resource, fsa, context);
  }
}
