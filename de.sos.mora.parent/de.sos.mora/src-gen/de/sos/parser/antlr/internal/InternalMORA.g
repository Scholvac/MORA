/*
 * generated by Xtext 2.19.0
 */
grammar InternalMORA;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package de.sos.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.sos.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.sos.services.MORAGrammarAccess;

}

@parser::members {

 	private MORAGrammarAccess grammarAccess;

    public InternalMORAParser(TokenStream input, MORAGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected MORAGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getIncludesIncludeParserRuleCall_0_0());
				}
				lv_includes_0_0=ruleInclude
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"includes",
						lv_includes_0_0,
						"de.sos.MORA.Include");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getOptionsOptionsParserRuleCall_1_0());
				}
				lv_options_1_0=ruleOptions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"options",
						lv_options_1_0,
						"de.sos.MORA.Options");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_2='package'
		{
			newLeafNode(otherlv_2, grammarAccess.getModelAccess().getPackageKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getModelAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"de.sos.MORA.ID");
				}
			)
		)
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getModelAccess().getInterfacesInterfaceParserRuleCall_5_0_0_0());
						}
						lv_interfaces_5_0=ruleInterface
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getModelRule());
							}
							add(
								$current,
								"interfaces",
								lv_interfaces_5_0,
								"de.sos.MORA.Interface");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getModelAccess().getTypesTypeDeclParserRuleCall_5_0_1_0());
						}
						lv_types_6_0=ruleTypeDecl
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getModelRule());
							}
							add(
								$current,
								"types",
								lv_types_6_0,
								"de.sos.MORA.TypeDecl");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				otherlv_7=';'
				{
					newLeafNode(otherlv_7, grammarAccess.getModelAccess().getSemicolonKeyword_5_1());
				}
			)?
		)*
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getModelAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleInclude
entryRuleInclude returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIncludeRule()); }
	iv_ruleInclude=ruleInclude
	{ $current=$iv_ruleInclude.current; }
	EOF;

// Rule Include
ruleInclude returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getIncludeAccess().getImportKeyword_0());
		}
		(
			(
				lv_importUri_1_0=RULE_STRING
				{
					newLeafNode(lv_importUri_1_0, grammarAccess.getIncludeAccess().getImportUriSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIncludeRule());
					}
					setWithLastConsumed(
						$current,
						"importUri",
						lv_importUri_1_0,
						"de.sos.MORA.STRING");
				}
			)
		)
		(
			otherlv_2=';'
			{
				newLeafNode(otherlv_2, grammarAccess.getIncludeAccess().getSemicolonKeyword_2());
			}
		)?
	)
;

// Entry rule entryRuleOptions
entryRuleOptions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOptionsRule()); }
	iv_ruleOptions=ruleOptions
	{ $current=$iv_ruleOptions.current; }
	EOF;

// Rule Options
ruleOptions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='options'
		{
			newLeafNode(otherlv_0, grammarAccess.getOptionsAccess().getOptionsKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getOptionsAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getOptionsAccess().getJavaOptionsJavaOptionsParserRuleCall_2_0_0());
					}
					lv_javaOptions_2_0=ruleJavaOptions
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOptionsRule());
						}
						set(
							$current,
							"javaOptions",
							lv_javaOptions_2_0,
							"de.sos.MORA.JavaOptions");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getOptionsAccess().getCsOptionsCSharpOptionsParserRuleCall_2_1_0());
					}
					lv_csOptions_3_0=ruleCSharpOptions
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOptionsRule());
						}
						set(
							$current,
							"csOptions",
							lv_csOptions_3_0,
							"de.sos.MORA.CSharpOptions");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getOptionsAccess().getCppOptionsCppOptionsParserRuleCall_2_2_0());
					}
					lv_cppOptions_4_0=ruleCppOptions
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOptionsRule());
						}
						set(
							$current,
							"cppOptions",
							lv_cppOptions_4_0,
							"de.sos.MORA.CppOptions");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)+
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getOptionsAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleJavaOptions
entryRuleJavaOptions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJavaOptionsRule()); }
	iv_ruleJavaOptions=ruleJavaOptions
	{ $current=$iv_ruleJavaOptions.current; }
	EOF;

// Rule JavaOptions
ruleJavaOptions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='java'
		{
			newLeafNode(otherlv_0, grammarAccess.getJavaOptionsAccess().getJavaKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getJavaOptionsAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='base-package'
		{
			newLeafNode(otherlv_2, grammarAccess.getJavaOptionsAccess().getBasePackageKeyword_2());
		}
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getJavaOptionsAccess().getEqualsSignKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getJavaOptionsAccess().getBasePackageQualifiedNameParserRuleCall_4_0());
				}
				lv_basePackage_4_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJavaOptionsRule());
					}
					set(
						$current,
						"basePackage",
						lv_basePackage_4_0,
						"de.sos.MORA.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getJavaOptionsAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleCSharpOptions
entryRuleCSharpOptions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCSharpOptionsRule()); }
	iv_ruleCSharpOptions=ruleCSharpOptions
	{ $current=$iv_ruleCSharpOptions.current; }
	EOF;

// Rule CSharpOptions
ruleCSharpOptions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='csharp'
		{
			newLeafNode(otherlv_0, grammarAccess.getCSharpOptionsAccess().getCsharpKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getCSharpOptionsAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='base-namespace'
		{
			newLeafNode(otherlv_2, grammarAccess.getCSharpOptionsAccess().getBaseNamespaceKeyword_2());
		}
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getCSharpOptionsAccess().getEqualsSignKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCSharpOptionsAccess().getBaseNamespaceQualifiedNameParserRuleCall_4_0());
				}
				lv_baseNamespace_4_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCSharpOptionsRule());
					}
					set(
						$current,
						"baseNamespace",
						lv_baseNamespace_4_0,
						"de.sos.MORA.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getCSharpOptionsAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleCppOptions
entryRuleCppOptions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCppOptionsRule()); }
	iv_ruleCppOptions=ruleCppOptions
	{ $current=$iv_ruleCppOptions.current; }
	EOF;

// Rule CppOptions
ruleCppOptions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='cpp'
		{
			newLeafNode(otherlv_0, grammarAccess.getCppOptionsAccess().getCppKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getCppOptionsAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='base-namespace'
		{
			newLeafNode(otherlv_2, grammarAccess.getCppOptionsAccess().getBaseNamespaceKeyword_2());
		}
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getCppOptionsAccess().getEqualsSignKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCppOptionsAccess().getBaseNamespaceQualifiedNameParserRuleCall_4_0());
				}
				lv_baseNamespace_4_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCppOptionsRule());
					}
					set(
						$current,
						"baseNamespace",
						lv_baseNamespace_4_0,
						"de.sos.MORA.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getCppOptionsAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleTypeDecl
entryRuleTypeDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeDeclRule()); }
	iv_ruleTypeDecl=ruleTypeDecl
	{ $current=$iv_ruleTypeDecl.current; }
	EOF;

// Rule TypeDecl
ruleTypeDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTypeDeclAccess().getSingleTypeDeclParserRuleCall_0());
		}
		this_SingleTypeDecl_0=ruleSingleTypeDecl
		{
			$current = $this_SingleTypeDecl_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeDeclAccess().getListTypeDeclParserRuleCall_1());
		}
		this_ListTypeDecl_1=ruleListTypeDecl
		{
			$current = $this_ListTypeDecl_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSingleTypeDecl
entryRuleSingleTypeDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSingleTypeDeclRule()); }
	iv_ruleSingleTypeDecl=ruleSingleTypeDecl
	{ $current=$iv_ruleSingleTypeDecl.current; }
	EOF;

// Rule SingleTypeDecl
ruleSingleTypeDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSingleTypeDeclAccess().getPrimTypeDeclParserRuleCall_0());
		}
		this_PrimTypeDecl_0=rulePrimTypeDecl
		{
			$current = $this_PrimTypeDecl_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSingleTypeDeclAccess().getStructDeclParserRuleCall_1());
		}
		this_StructDecl_1=ruleStructDecl
		{
			$current = $this_StructDecl_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSingleTypeDeclAccess().getEnumDeclParserRuleCall_2());
		}
		this_EnumDecl_2=ruleEnumDecl
		{
			$current = $this_EnumDecl_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePrimTypeDecl
entryRulePrimTypeDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimTypeDeclRule()); }
	iv_rulePrimTypeDecl=rulePrimTypeDecl
	{ $current=$iv_rulePrimTypeDecl.current; }
	EOF;

// Rule PrimTypeDecl
rulePrimTypeDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getPrimTypeDeclAccess().getNamePrimTypeLiteralEnumRuleCall_0());
			}
			lv_name_0_0=rulePrimTypeLiteral
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getPrimTypeDeclRule());
				}
				set(
					$current,
					"name",
					lv_name_0_0,
					"de.sos.MORA.PrimTypeLiteral");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleAnnotation
entryRuleAnnotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnnotationRule()); }
	iv_ruleAnnotation=ruleAnnotation
	{ $current=$iv_ruleAnnotation.current; }
	EOF;

// Rule Annotation
ruleAnnotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='@'
		{
			newLeafNode(otherlv_0, grammarAccess.getAnnotationAccess().getCommercialAtKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getAnnotationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAnnotationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"de.sos.MORA.ID");
				}
			)
		)
		(
			otherlv_2='='
			{
				newLeafNode(otherlv_2, grammarAccess.getAnnotationAccess().getEqualsSignKeyword_2_0());
			}
			(
				(
					lv_value_3_0=RULE_STRING
					{
						newLeafNode(lv_value_3_0, grammarAccess.getAnnotationAccess().getValueSTRINGTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAnnotationRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_3_0,
							"de.sos.MORA.STRING");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleStructDecl
entryRuleStructDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStructDeclRule()); }
	iv_ruleStructDecl=ruleStructDecl
	{ $current=$iv_ruleStructDecl.current; }
	EOF;

// Rule StructDecl
ruleStructDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_doc_0_0=RULE_ML_COMMENT
				{
					newLeafNode(lv_doc_0_0, grammarAccess.getStructDeclAccess().getDocML_COMMENTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStructDeclRule());
					}
					setWithLastConsumed(
						$current,
						"doc",
						lv_doc_0_0,
						"de.sos.MORA.ML_COMMENT");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getStructDeclAccess().getAnnoAnnotationParserRuleCall_1_0());
				}
				lv_anno_1_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStructDeclRule());
					}
					add(
						$current,
						"anno",
						lv_anno_1_0,
						"de.sos.MORA.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_2='struct'
		{
			newLeafNode(otherlv_2, grammarAccess.getStructDeclAccess().getStructKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getStructDeclAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStructDeclRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"de.sos.MORA.ID");
				}
			)
		)
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getStructDeclAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStructDeclAccess().getMemberMemberParserRuleCall_5_0_0());
					}
					lv_member_5_0=ruleMember
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStructDeclRule());
						}
						add(
							$current,
							"member",
							lv_member_5_0,
							"de.sos.MORA.Member");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=';'
				{
					newLeafNode(otherlv_6, grammarAccess.getStructDeclAccess().getSemicolonKeyword_5_1());
				}
			)?
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getStructDeclAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleMember
entryRuleMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMemberRule()); }
	iv_ruleMember=ruleMember
	{ $current=$iv_ruleMember.current; }
	EOF;

// Rule Member
ruleMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_doc_0_0=RULE_ML_COMMENT
				{
					newLeafNode(lv_doc_0_0, grammarAccess.getMemberAccess().getDocML_COMMENTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMemberRule());
					}
					setWithLastConsumed(
						$current,
						"doc",
						lv_doc_0_0,
						"de.sos.MORA.ML_COMMENT");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getMemberAccess().getAnnoAnnotationParserRuleCall_1_0());
				}
				lv_anno_1_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMemberRule());
					}
					add(
						$current,
						"anno",
						lv_anno_1_0,
						"de.sos.MORA.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMemberRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getMemberAccess().getComplexTypeTypeDeclCrossReference_2_0_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getMemberAccess().getPrimTypePrimTypeLiteralEnumRuleCall_2_1_0());
					}
					lv_primType_3_0=rulePrimTypeLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMemberRule());
						}
						set(
							$current,
							"primType",
							lv_primType_3_0,
							"de.sos.MORA.PrimTypeLiteral");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				lv_name_4_0=RULE_ID
				{
					newLeafNode(lv_name_4_0, grammarAccess.getMemberAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMemberRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"de.sos.MORA.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleEnumDecl
entryRuleEnumDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumDeclRule()); }
	iv_ruleEnumDecl=ruleEnumDecl
	{ $current=$iv_ruleEnumDecl.current; }
	EOF;

// Rule EnumDecl
ruleEnumDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_doc_0_0=RULE_ML_COMMENT
				{
					newLeafNode(lv_doc_0_0, grammarAccess.getEnumDeclAccess().getDocML_COMMENTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumDeclRule());
					}
					setWithLastConsumed(
						$current,
						"doc",
						lv_doc_0_0,
						"de.sos.MORA.ML_COMMENT");
				}
			)
		)?
		otherlv_1='enum'
		{
			newLeafNode(otherlv_1, grammarAccess.getEnumDeclAccess().getEnumKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getEnumDeclAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumDeclRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"de.sos.MORA.ID");
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getEnumDeclAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getEnumDeclAccess().getLiteralsLiteralParserRuleCall_4_0_0());
					}
					lv_literals_4_0=ruleLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEnumDeclRule());
						}
						add(
							$current,
							"literals",
							lv_literals_4_0,
							"de.sos.MORA.Literal");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=';'
				{
					newLeafNode(otherlv_5, grammarAccess.getEnumDeclAccess().getSemicolonKeyword_4_1());
				}
			)?
		)+
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getEnumDeclAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleLiteral
entryRuleLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralRule()); }
	iv_ruleLiteral=ruleLiteral
	{ $current=$iv_ruleLiteral.current; }
	EOF;

// Rule Literal
ruleLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_doc_0_0=RULE_ML_COMMENT
				{
					newLeafNode(lv_doc_0_0, grammarAccess.getLiteralAccess().getDocML_COMMENTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLiteralRule());
					}
					setWithLastConsumed(
						$current,
						"doc",
						lv_doc_0_0,
						"de.sos.MORA.ML_COMMENT");
				}
			)
		)?
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getLiteralAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLiteralRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"de.sos.MORA.ID");
				}
			)
		)
		(
			otherlv_2='='
			{
				newLeafNode(otherlv_2, grammarAccess.getLiteralAccess().getEqualsSignKeyword_2_0());
			}
			(
				(
					lv_value_3_0=RULE_INT
					{
						newLeafNode(lv_value_3_0, grammarAccess.getLiteralAccess().getValueINTTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLiteralRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_3_0,
							"de.sos.MORA.INT");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleListTypeDecl
entryRuleListTypeDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListTypeDeclRule()); }
	iv_ruleListTypeDecl=ruleListTypeDecl
	{ $current=$iv_ruleListTypeDecl.current; }
	EOF;

// Rule ListTypeDecl
ruleListTypeDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_doc_0_0=RULE_ML_COMMENT
				{
					newLeafNode(lv_doc_0_0, grammarAccess.getListTypeDeclAccess().getDocML_COMMENTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getListTypeDeclRule());
					}
					setWithLastConsumed(
						$current,
						"doc",
						lv_doc_0_0,
						"de.sos.MORA.ML_COMMENT");
				}
			)
		)?
		otherlv_1='List'
		{
			newLeafNode(otherlv_1, grammarAccess.getListTypeDeclAccess().getListKeyword_1());
		}
		otherlv_2='<'
		{
			newLeafNode(otherlv_2, grammarAccess.getListTypeDeclAccess().getLessThanSignKeyword_2());
		}
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getListTypeDeclRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getListTypeDeclAccess().getValueTypeSingleTypeDeclCrossReference_3_0_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getListTypeDeclAccess().getPrimTypePrimTypeLiteralEnumRuleCall_3_1_0());
					}
					lv_primType_4_0=rulePrimTypeLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getListTypeDeclRule());
						}
						set(
							$current,
							"primType",
							lv_primType_4_0,
							"de.sos.MORA.PrimTypeLiteral");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_5='>'
		{
			newLeafNode(otherlv_5, grammarAccess.getListTypeDeclAccess().getGreaterThanSignKeyword_4());
		}
		(
			(
				lv_name_6_0=RULE_ID
				{
					newLeafNode(lv_name_6_0, grammarAccess.getListTypeDeclAccess().getNameIDTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getListTypeDeclRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_6_0,
						"de.sos.MORA.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleInterface
entryRuleInterface returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInterfaceRule()); }
	iv_ruleInterface=ruleInterface
	{ $current=$iv_ruleInterface.current; }
	EOF;

// Rule Interface
ruleInterface returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_doc_0_0=RULE_ML_COMMENT
				{
					newLeafNode(lv_doc_0_0, grammarAccess.getInterfaceAccess().getDocML_COMMENTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInterfaceRule());
					}
					setWithLastConsumed(
						$current,
						"doc",
						lv_doc_0_0,
						"de.sos.MORA.ML_COMMENT");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getInterfaceAccess().getAnnoAnnotationParserRuleCall_1_0());
				}
				lv_anno_1_0=ruleAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInterfaceRule());
					}
					add(
						$current,
						"anno",
						lv_anno_1_0,
						"de.sos.MORA.Annotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_2='interface'
		{
			newLeafNode(otherlv_2, grammarAccess.getInterfaceAccess().getInterfaceKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getInterfaceAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInterfaceRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"de.sos.MORA.ID");
				}
			)
		)
		(
			otherlv_4='extends'
			{
				newLeafNode(otherlv_4, grammarAccess.getInterfaceAccess().getExtendsKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getInterfaceRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getInterfaceAccess().getParentsInterfaceCrossReference_4_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getInterfaceAccess().getCommaKeyword_4_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getInterfaceRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getInterfaceAccess().getParentsInterfaceCrossReference_4_2_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_8='{'
		{
			newLeafNode(otherlv_8, grammarAccess.getInterfaceAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getInterfaceAccess().getMethodsMethodParserRuleCall_6_0_0());
					}
					lv_methods_9_0=ruleMethod
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInterfaceRule());
						}
						add(
							$current,
							"methods",
							lv_methods_9_0,
							"de.sos.MORA.Method");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_10=';'
				{
					newLeafNode(otherlv_10, grammarAccess.getInterfaceAccess().getSemicolonKeyword_6_1());
				}
			)?
		)*
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getInterfaceAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleMethod
entryRuleMethod returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethodRule()); }
	iv_ruleMethod=ruleMethod
	{ $current=$iv_ruleMethod.current; }
	EOF;

// Rule Method
ruleMethod returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_doc_0_0=RULE_ML_COMMENT
				{
					newLeafNode(lv_doc_0_0, grammarAccess.getMethodAccess().getDocML_COMMENTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMethodRule());
					}
					setWithLastConsumed(
						$current,
						"doc",
						lv_doc_0_0,
						"de.sos.MORA.ML_COMMENT");
				}
			)
		)?
		(
			(
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMethodRule());
							}
						}
						otherlv_1=RULE_ID
						{
							newLeafNode(otherlv_1, grammarAccess.getMethodAccess().getReturnProxyTypeInterfaceCrossReference_1_0_0_0());
						}
					)
				)
				otherlv_2='*'
				{
					newLeafNode(otherlv_2, grammarAccess.getMethodAccess().getAsteriskKeyword_1_0_1());
				}
			)
			    |
			(
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMethodRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getMethodAccess().getComplexTypeTypeDeclCrossReference_1_1_0_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getMethodAccess().getPrimTypePrimTypeLiteralEnumRuleCall_1_1_1_0());
						}
						lv_primType_4_0=rulePrimTypeLiteral
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMethodRule());
							}
							set(
								$current,
								"primType",
								lv_primType_4_0,
								"de.sos.MORA.PrimTypeLiteral");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		(
			(
				lv_name_5_0=RULE_ID
				{
					newLeafNode(lv_name_5_0, grammarAccess.getMethodAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMethodRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_5_0,
						"de.sos.MORA.ID");
				}
			)
		)
		otherlv_6='('
		{
			newLeafNode(otherlv_6, grammarAccess.getMethodAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMethodAccess().getParametersParameterParserRuleCall_4_0_0());
					}
					lv_parameters_7_0=ruleParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMethodRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_7_0,
							"de.sos.MORA.Parameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getMethodAccess().getCommaKeyword_4_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMethodAccess().getParametersParameterParserRuleCall_4_1_1_0());
						}
						lv_parameters_9_0=ruleParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMethodRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_9_0,
								"de.sos.MORA.Parameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_10=')'
		{
			newLeafNode(otherlv_10, grammarAccess.getMethodAccess().getRightParenthesisKeyword_5());
		}
		(
			otherlv_11='throws'
			{
				newLeafNode(otherlv_11, grammarAccess.getMethodAccess().getThrowsKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMethodAccess().getExceptionsExceptionParserRuleCall_6_1_0());
					}
					lv_exceptions_12_0=ruleException
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMethodRule());
						}
						add(
							$current,
							"exceptions",
							lv_exceptions_12_0,
							"de.sos.MORA.Exception");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_13=','
				{
					newLeafNode(otherlv_13, grammarAccess.getMethodAccess().getCommaKeyword_6_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMethodAccess().getExceptionsExceptionParserRuleCall_6_2_1_0());
						}
						lv_exceptions_14_0=ruleException
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMethodRule());
							}
							add(
								$current,
								"exceptions",
								lv_exceptions_14_0,
								"de.sos.MORA.Exception");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
	)
;

// Entry rule entryRuleException
entryRuleException returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExceptionRule()); }
	iv_ruleException=ruleException
	{ $current=$iv_ruleException.current; }
	EOF;

// Rule Exception
ruleException returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='exception'
		{
			newLeafNode(otherlv_0, grammarAccess.getExceptionAccess().getExceptionKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getExceptionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExceptionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"de.sos.MORA.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getExceptionAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getExceptionAccess().getMemberMemberParserRuleCall_3_0_0());
					}
					lv_member_3_0=ruleMember
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExceptionRule());
						}
						add(
							$current,
							"member",
							lv_member_3_0,
							"de.sos.MORA.Member");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=';'
				{
					newLeafNode(otherlv_4, grammarAccess.getExceptionAccess().getSemicolonKeyword_3_1());
				}
			)?
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getExceptionAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	iv_ruleParameter=ruleParameter
	{ $current=$iv_ruleParameter.current; }
	EOF;

// Rule Parameter
ruleParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getParameterRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getParameterAccess().getComplexTypeTypeDeclCrossReference_0_0_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getParameterAccess().getPrimTypePrimTypeLiteralEnumRuleCall_0_1_0());
					}
					lv_primType_1_0=rulePrimTypeLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParameterRule());
						}
						set(
							$current,
							"primType",
							lv_primType_1_0,
							"de.sos.MORA.PrimTypeLiteral");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getParameterRule());
							}
						}
						otherlv_2=RULE_ID
						{
							newLeafNode(otherlv_2, grammarAccess.getParameterAccess().getProxyTypeInterfaceCrossReference_0_2_0_0());
						}
					)
				)
				otherlv_3='*'
				{
					newLeafNode(otherlv_3, grammarAccess.getParameterAccess().getAsteriskKeyword_0_2_1());
				}
			)
		)
		(
			(
				lv_name_4_0=RULE_ID
				{
					newLeafNode(lv_name_4_0, grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"de.sos.MORA.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			(
				kw='.'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0_0());
				}
				    |
				kw='::'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getColonColonKeyword_1_0_1());
				}
			)
			this_ID_3=RULE_ID
			{
				$current.merge(this_ID_3);
			}
			{
				newLeafNode(this_ID_3, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Rule PrimTypeLiteral
rulePrimTypeLiteral returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='bool'
			{
				$current = grammarAccess.getPrimTypeLiteralAccess().getBOOLEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getPrimTypeLiteralAccess().getBOOLEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='byte'
			{
				$current = grammarAccess.getPrimTypeLiteralAccess().getBYTEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getPrimTypeLiteralAccess().getBYTEEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='short'
			{
				$current = grammarAccess.getPrimTypeLiteralAccess().getSHORTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getPrimTypeLiteralAccess().getSHORTEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='int'
			{
				$current = grammarAccess.getPrimTypeLiteralAccess().getINTEGEREnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getPrimTypeLiteralAccess().getINTEGEREnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='long'
			{
				$current = grammarAccess.getPrimTypeLiteralAccess().getLONGEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getPrimTypeLiteralAccess().getLONGEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='float'
			{
				$current = grammarAccess.getPrimTypeLiteralAccess().getFLOATEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getPrimTypeLiteralAccess().getFLOATEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='double'
			{
				$current = grammarAccess.getPrimTypeLiteralAccess().getDOUBLEEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getPrimTypeLiteralAccess().getDOUBLEEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='string'
			{
				$current = grammarAccess.getPrimTypeLiteralAccess().getSTRINGEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getPrimTypeLiteralAccess().getSTRINGEnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8='void'
			{
				$current = grammarAccess.getPrimTypeLiteralAccess().getVOIDEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getPrimTypeLiteralAccess().getVOIDEnumLiteralDeclaration_8());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
