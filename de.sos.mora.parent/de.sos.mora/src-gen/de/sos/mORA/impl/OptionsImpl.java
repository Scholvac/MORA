/**
 * generated by Xtext 2.19.0
 */
package de.sos.mORA.impl;

import de.sos.mORA.CSharpOptions;
import de.sos.mORA.CppOptions;
import de.sos.mORA.JavaOptions;
import de.sos.mORA.MORAPackage;
import de.sos.mORA.Options;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Options</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.sos.mORA.impl.OptionsImpl#getJavaOptions <em>Java Options</em>}</li>
 *   <li>{@link de.sos.mORA.impl.OptionsImpl#getCsOptions <em>Cs Options</em>}</li>
 *   <li>{@link de.sos.mORA.impl.OptionsImpl#getCppOptions <em>Cpp Options</em>}</li>
 * </ul>
 *
 * @generated
 */
public class OptionsImpl extends MinimalEObjectImpl.Container implements Options
{
  /**
   * The cached value of the '{@link #getJavaOptions() <em>Java Options</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getJavaOptions()
   * @generated
   * @ordered
   */
  protected JavaOptions javaOptions;

  /**
   * The cached value of the '{@link #getCsOptions() <em>Cs Options</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCsOptions()
   * @generated
   * @ordered
   */
  protected CSharpOptions csOptions;

  /**
   * The cached value of the '{@link #getCppOptions() <em>Cpp Options</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCppOptions()
   * @generated
   * @ordered
   */
  protected CppOptions cppOptions;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected OptionsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MORAPackage.Literals.OPTIONS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public JavaOptions getJavaOptions()
  {
    return javaOptions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetJavaOptions(JavaOptions newJavaOptions, NotificationChain msgs)
  {
    JavaOptions oldJavaOptions = javaOptions;
    javaOptions = newJavaOptions;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MORAPackage.OPTIONS__JAVA_OPTIONS, oldJavaOptions, newJavaOptions);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setJavaOptions(JavaOptions newJavaOptions)
  {
    if (newJavaOptions != javaOptions)
    {
      NotificationChain msgs = null;
      if (javaOptions != null)
        msgs = ((InternalEObject)javaOptions).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MORAPackage.OPTIONS__JAVA_OPTIONS, null, msgs);
      if (newJavaOptions != null)
        msgs = ((InternalEObject)newJavaOptions).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MORAPackage.OPTIONS__JAVA_OPTIONS, null, msgs);
      msgs = basicSetJavaOptions(newJavaOptions, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MORAPackage.OPTIONS__JAVA_OPTIONS, newJavaOptions, newJavaOptions));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CSharpOptions getCsOptions()
  {
    return csOptions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCsOptions(CSharpOptions newCsOptions, NotificationChain msgs)
  {
    CSharpOptions oldCsOptions = csOptions;
    csOptions = newCsOptions;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MORAPackage.OPTIONS__CS_OPTIONS, oldCsOptions, newCsOptions);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCsOptions(CSharpOptions newCsOptions)
  {
    if (newCsOptions != csOptions)
    {
      NotificationChain msgs = null;
      if (csOptions != null)
        msgs = ((InternalEObject)csOptions).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MORAPackage.OPTIONS__CS_OPTIONS, null, msgs);
      if (newCsOptions != null)
        msgs = ((InternalEObject)newCsOptions).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MORAPackage.OPTIONS__CS_OPTIONS, null, msgs);
      msgs = basicSetCsOptions(newCsOptions, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MORAPackage.OPTIONS__CS_OPTIONS, newCsOptions, newCsOptions));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CppOptions getCppOptions()
  {
    return cppOptions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCppOptions(CppOptions newCppOptions, NotificationChain msgs)
  {
    CppOptions oldCppOptions = cppOptions;
    cppOptions = newCppOptions;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MORAPackage.OPTIONS__CPP_OPTIONS, oldCppOptions, newCppOptions);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCppOptions(CppOptions newCppOptions)
  {
    if (newCppOptions != cppOptions)
    {
      NotificationChain msgs = null;
      if (cppOptions != null)
        msgs = ((InternalEObject)cppOptions).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MORAPackage.OPTIONS__CPP_OPTIONS, null, msgs);
      if (newCppOptions != null)
        msgs = ((InternalEObject)newCppOptions).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MORAPackage.OPTIONS__CPP_OPTIONS, null, msgs);
      msgs = basicSetCppOptions(newCppOptions, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MORAPackage.OPTIONS__CPP_OPTIONS, newCppOptions, newCppOptions));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MORAPackage.OPTIONS__JAVA_OPTIONS:
        return basicSetJavaOptions(null, msgs);
      case MORAPackage.OPTIONS__CS_OPTIONS:
        return basicSetCsOptions(null, msgs);
      case MORAPackage.OPTIONS__CPP_OPTIONS:
        return basicSetCppOptions(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MORAPackage.OPTIONS__JAVA_OPTIONS:
        return getJavaOptions();
      case MORAPackage.OPTIONS__CS_OPTIONS:
        return getCsOptions();
      case MORAPackage.OPTIONS__CPP_OPTIONS:
        return getCppOptions();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MORAPackage.OPTIONS__JAVA_OPTIONS:
        setJavaOptions((JavaOptions)newValue);
        return;
      case MORAPackage.OPTIONS__CS_OPTIONS:
        setCsOptions((CSharpOptions)newValue);
        return;
      case MORAPackage.OPTIONS__CPP_OPTIONS:
        setCppOptions((CppOptions)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MORAPackage.OPTIONS__JAVA_OPTIONS:
        setJavaOptions((JavaOptions)null);
        return;
      case MORAPackage.OPTIONS__CS_OPTIONS:
        setCsOptions((CSharpOptions)null);
        return;
      case MORAPackage.OPTIONS__CPP_OPTIONS:
        setCppOptions((CppOptions)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MORAPackage.OPTIONS__JAVA_OPTIONS:
        return javaOptions != null;
      case MORAPackage.OPTIONS__CS_OPTIONS:
        return csOptions != null;
      case MORAPackage.OPTIONS__CPP_OPTIONS:
        return cppOptions != null;
    }
    return super.eIsSet(featureID);
  }

} //OptionsImpl
