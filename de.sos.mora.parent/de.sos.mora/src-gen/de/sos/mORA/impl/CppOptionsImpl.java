/**
 * generated by Xtext 2.19.0
 */
package de.sos.mORA.impl;

import de.sos.mORA.CppOptions;
import de.sos.mORA.MORAPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Cpp Options</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.sos.mORA.impl.CppOptionsImpl#getBaseNamespace <em>Base Namespace</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CppOptionsImpl extends MinimalEObjectImpl.Container implements CppOptions
{
  /**
   * The default value of the '{@link #getBaseNamespace() <em>Base Namespace</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBaseNamespace()
   * @generated
   * @ordered
   */
  protected static final String BASE_NAMESPACE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getBaseNamespace() <em>Base Namespace</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBaseNamespace()
   * @generated
   * @ordered
   */
  protected String baseNamespace = BASE_NAMESPACE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CppOptionsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MORAPackage.Literals.CPP_OPTIONS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getBaseNamespace()
  {
    return baseNamespace;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setBaseNamespace(String newBaseNamespace)
  {
    String oldBaseNamespace = baseNamespace;
    baseNamespace = newBaseNamespace;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MORAPackage.CPP_OPTIONS__BASE_NAMESPACE, oldBaseNamespace, baseNamespace));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MORAPackage.CPP_OPTIONS__BASE_NAMESPACE:
        return getBaseNamespace();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MORAPackage.CPP_OPTIONS__BASE_NAMESPACE:
        setBaseNamespace((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MORAPackage.CPP_OPTIONS__BASE_NAMESPACE:
        setBaseNamespace(BASE_NAMESPACE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MORAPackage.CPP_OPTIONS__BASE_NAMESPACE:
        return BASE_NAMESPACE_EDEFAULT == null ? baseNamespace != null : !BASE_NAMESPACE_EDEFAULT.equals(baseNamespace);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (baseNamespace: ");
    result.append(baseNamespace);
    result.append(')');
    return result.toString();
  }

} //CppOptionsImpl
