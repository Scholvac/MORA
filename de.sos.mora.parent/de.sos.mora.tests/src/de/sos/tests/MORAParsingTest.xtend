/*
 * generated by Xtext 2.19.0
 */
package de.sos.tests

import com.google.inject.Inject
import de.sos.mORA.Model
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith

@ExtendWith(InjectionExtension)
@InjectWith(MORAInjectorProvider)
class MORAParsingTest {
	@Inject
	ParseHelper<Model> parseHelper
	
	@Test
	def void loadModel() {
		val result = parseHelper.parse('''
			package serialize {
				//MORA reMOte pRoxy cAll
				enum MyEnum {
					KEY;
					VALUE;
				}
				struct SimpleStruct {
					1: bool boolValue;
					2: byte byteValue;
					3: short shortValue;
					4: int intValue;
					5: long longValue;
					6: float floatValue;
					7: double doubleValue;
					8: string stringValue;
					9: MyEnum enumValue; 
					10:SimpleStruct structValue;
				}
				
				List<bool> BoolList;
				List<byte> ByteList;
				List<short> ShortList;
				List<int>	IntList;
				List<long> LongList;
				List<float> FloatList;
				List<double> DoubleList;
				List<string> StringList;
				List<MyEnum> MyEnumList;
				List<SimpleStruct> SimpleStructList;
				
				struct ListStruct {
					1: BoolList boolListValue;
					2: ByteList byteListValue;
					3: ShortList shortListValue;
					4: IntList	intListValue;
					5: LongList	longListValue;
					6: FloatList floatListValue;
					7: DoubleList doubleListValue;
					8: StringList stringListValue;
					9: MyEnumList enumListValue;
					10: SimpleStructList structListValue;
				}
				List<ListStruct> ListListStruct;
				
				interface EchoManager {
					bool echo(1: bool value);
					byte echo(1: byte value);
					short echo(1: short value);
					int echo(1: int value);
					long echo(1: long value);
					float echo(1: float value);
					double echo(1: double value);
					string echo(1: string value);
					MyEnum echo(1: MyEnum value);
					SimpleStruct echo(1: SimpleStruct value);
					ListStruct echo(1: ListStruct value);
					
					BoolList echo(1: bool value);
					ByteList echo(1: byte value);
					ShortList echo(1: short value);
					IntList echo(1: int value);
					LongList echo(1: long value);
					FloatList echo(1: float value);
					DoubleList echo(1: double value);
					StringList echo(1: string value);
					MyEnumList echo(1: MyEnum value);
					SimpleStructList echo(1: SimpleStruct value);
					ListListStruct echo(1: ListListStruct value);
				}
			 
			}   
		''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
}
