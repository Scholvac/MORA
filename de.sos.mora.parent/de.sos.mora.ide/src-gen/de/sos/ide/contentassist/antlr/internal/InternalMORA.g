/*
 * generated by Xtext 2.19.0
 */
grammar InternalMORA;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package de.sos.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.sos.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import de.sos.services.MORAGrammarAccess;

}
@parser::members {
	private MORAGrammarAccess grammarAccess;

	public void setGrammarAccess(MORAGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInclude
entryRuleInclude
:
{ before(grammarAccess.getIncludeRule()); }
	 ruleInclude
{ after(grammarAccess.getIncludeRule()); } 
	 EOF 
;

// Rule Include
ruleInclude 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIncludeAccess().getGroup()); }
		(rule__Include__Group__0)
		{ after(grammarAccess.getIncludeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOptions
entryRuleOptions
:
{ before(grammarAccess.getOptionsRule()); }
	 ruleOptions
{ after(grammarAccess.getOptionsRule()); } 
	 EOF 
;

// Rule Options
ruleOptions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOptionsAccess().getGroup()); }
		(rule__Options__Group__0)
		{ after(grammarAccess.getOptionsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJavaOptions
entryRuleJavaOptions
:
{ before(grammarAccess.getJavaOptionsRule()); }
	 ruleJavaOptions
{ after(grammarAccess.getJavaOptionsRule()); } 
	 EOF 
;

// Rule JavaOptions
ruleJavaOptions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJavaOptionsAccess().getGroup()); }
		(rule__JavaOptions__Group__0)
		{ after(grammarAccess.getJavaOptionsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCSharpOptions
entryRuleCSharpOptions
:
{ before(grammarAccess.getCSharpOptionsRule()); }
	 ruleCSharpOptions
{ after(grammarAccess.getCSharpOptionsRule()); } 
	 EOF 
;

// Rule CSharpOptions
ruleCSharpOptions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCSharpOptionsAccess().getGroup()); }
		(rule__CSharpOptions__Group__0)
		{ after(grammarAccess.getCSharpOptionsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCppOptions
entryRuleCppOptions
:
{ before(grammarAccess.getCppOptionsRule()); }
	 ruleCppOptions
{ after(grammarAccess.getCppOptionsRule()); } 
	 EOF 
;

// Rule CppOptions
ruleCppOptions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCppOptionsAccess().getGroup()); }
		(rule__CppOptions__Group__0)
		{ after(grammarAccess.getCppOptionsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeDecl
entryRuleTypeDecl
:
{ before(grammarAccess.getTypeDeclRule()); }
	 ruleTypeDecl
{ after(grammarAccess.getTypeDeclRule()); } 
	 EOF 
;

// Rule TypeDecl
ruleTypeDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeDeclAccess().getAlternatives()); }
		(rule__TypeDecl__Alternatives)
		{ after(grammarAccess.getTypeDeclAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSingleTypeDecl
entryRuleSingleTypeDecl
:
{ before(grammarAccess.getSingleTypeDeclRule()); }
	 ruleSingleTypeDecl
{ after(grammarAccess.getSingleTypeDeclRule()); } 
	 EOF 
;

// Rule SingleTypeDecl
ruleSingleTypeDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSingleTypeDeclAccess().getAlternatives()); }
		(rule__SingleTypeDecl__Alternatives)
		{ after(grammarAccess.getSingleTypeDeclAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimTypeDecl
entryRulePrimTypeDecl
:
{ before(grammarAccess.getPrimTypeDeclRule()); }
	 rulePrimTypeDecl
{ after(grammarAccess.getPrimTypeDeclRule()); } 
	 EOF 
;

// Rule PrimTypeDecl
rulePrimTypeDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimTypeDeclAccess().getNameAssignment()); }
		(rule__PrimTypeDecl__NameAssignment)
		{ after(grammarAccess.getPrimTypeDeclAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnnotation
entryRuleAnnotation
:
{ before(grammarAccess.getAnnotationRule()); }
	 ruleAnnotation
{ after(grammarAccess.getAnnotationRule()); } 
	 EOF 
;

// Rule Annotation
ruleAnnotation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnnotationAccess().getGroup()); }
		(rule__Annotation__Group__0)
		{ after(grammarAccess.getAnnotationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStructDecl
entryRuleStructDecl
:
{ before(grammarAccess.getStructDeclRule()); }
	 ruleStructDecl
{ after(grammarAccess.getStructDeclRule()); } 
	 EOF 
;

// Rule StructDecl
ruleStructDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStructDeclAccess().getGroup()); }
		(rule__StructDecl__Group__0)
		{ after(grammarAccess.getStructDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMember
entryRuleMember
:
{ before(grammarAccess.getMemberRule()); }
	 ruleMember
{ after(grammarAccess.getMemberRule()); } 
	 EOF 
;

// Rule Member
ruleMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMemberAccess().getGroup()); }
		(rule__Member__Group__0)
		{ after(grammarAccess.getMemberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumDecl
entryRuleEnumDecl
:
{ before(grammarAccess.getEnumDeclRule()); }
	 ruleEnumDecl
{ after(grammarAccess.getEnumDeclRule()); } 
	 EOF 
;

// Rule EnumDecl
ruleEnumDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumDeclAccess().getGroup()); }
		(rule__EnumDecl__Group__0)
		{ after(grammarAccess.getEnumDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteral
entryRuleLiteral
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralAccess().getGroup()); }
		(rule__Literal__Group__0)
		{ after(grammarAccess.getLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleListTypeDecl
entryRuleListTypeDecl
:
{ before(grammarAccess.getListTypeDeclRule()); }
	 ruleListTypeDecl
{ after(grammarAccess.getListTypeDeclRule()); } 
	 EOF 
;

// Rule ListTypeDecl
ruleListTypeDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListTypeDeclAccess().getGroup()); }
		(rule__ListTypeDecl__Group__0)
		{ after(grammarAccess.getListTypeDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInterface
entryRuleInterface
:
{ before(grammarAccess.getInterfaceRule()); }
	 ruleInterface
{ after(grammarAccess.getInterfaceRule()); } 
	 EOF 
;

// Rule Interface
ruleInterface 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInterfaceAccess().getGroup()); }
		(rule__Interface__Group__0)
		{ after(grammarAccess.getInterfaceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethod
entryRuleMethod
:
{ before(grammarAccess.getMethodRule()); }
	 ruleMethod
{ after(grammarAccess.getMethodRule()); } 
	 EOF 
;

// Rule Method
ruleMethod 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodAccess().getGroup()); }
		(rule__Method__Group__0)
		{ after(grammarAccess.getMethodAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleException
entryRuleException
:
{ before(grammarAccess.getExceptionRule()); }
	 ruleException
{ after(grammarAccess.getExceptionRule()); } 
	 EOF 
;

// Rule Exception
ruleException 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExceptionAccess().getGroup()); }
		(rule__Exception__Group__0)
		{ after(grammarAccess.getExceptionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameter
entryRuleParameter
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterAccess().getGroup()); }
		(rule__Parameter__Group__0)
		{ after(grammarAccess.getParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule PrimTypeLiteral
rulePrimTypeLiteral
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimTypeLiteralAccess().getAlternatives()); }
		(rule__PrimTypeLiteral__Alternatives)
		{ after(grammarAccess.getPrimTypeLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Alternatives_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getInterfacesAssignment_5_0_0()); }
		(rule__Model__InterfacesAssignment_5_0_0)
		{ after(grammarAccess.getModelAccess().getInterfacesAssignment_5_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getTypesAssignment_5_0_1()); }
		(rule__Model__TypesAssignment_5_0_1)
		{ after(grammarAccess.getModelAccess().getTypesAssignment_5_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Options__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOptionsAccess().getJavaOptionsAssignment_2_0()); }
		(rule__Options__JavaOptionsAssignment_2_0)
		{ after(grammarAccess.getOptionsAccess().getJavaOptionsAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getOptionsAccess().getCsOptionsAssignment_2_1()); }
		(rule__Options__CsOptionsAssignment_2_1)
		{ after(grammarAccess.getOptionsAccess().getCsOptionsAssignment_2_1()); }
	)
	|
	(
		{ before(grammarAccess.getOptionsAccess().getCppOptionsAssignment_2_2()); }
		(rule__Options__CppOptionsAssignment_2_2)
		{ after(grammarAccess.getOptionsAccess().getCppOptionsAssignment_2_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDeclAccess().getSingleTypeDeclParserRuleCall_0()); }
		ruleSingleTypeDecl
		{ after(grammarAccess.getTypeDeclAccess().getSingleTypeDeclParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeDeclAccess().getListTypeDeclParserRuleCall_1()); }
		ruleListTypeDecl
		{ after(grammarAccess.getTypeDeclAccess().getListTypeDeclParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleTypeDecl__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleTypeDeclAccess().getPrimTypeDeclParserRuleCall_0()); }
		rulePrimTypeDecl
		{ after(grammarAccess.getSingleTypeDeclAccess().getPrimTypeDeclParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSingleTypeDeclAccess().getStructDeclParserRuleCall_1()); }
		ruleStructDecl
		{ after(grammarAccess.getSingleTypeDeclAccess().getStructDeclParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getSingleTypeDeclAccess().getEnumDeclParserRuleCall_2()); }
		ruleEnumDecl
		{ after(grammarAccess.getSingleTypeDeclAccess().getEnumDeclParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Member__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMemberAccess().getComplexTypeAssignment_2_0()); }
		(rule__Member__ComplexTypeAssignment_2_0)
		{ after(grammarAccess.getMemberAccess().getComplexTypeAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getMemberAccess().getPrimTypeAssignment_2_1()); }
		(rule__Member__PrimTypeAssignment_2_1)
		{ after(grammarAccess.getMemberAccess().getPrimTypeAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTypeDecl__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListTypeDeclAccess().getValueTypeAssignment_3_0()); }
		(rule__ListTypeDecl__ValueTypeAssignment_3_0)
		{ after(grammarAccess.getListTypeDeclAccess().getValueTypeAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getListTypeDeclAccess().getPrimTypeAssignment_3_1()); }
		(rule__ListTypeDecl__PrimTypeAssignment_3_1)
		{ after(grammarAccess.getListTypeDeclAccess().getPrimTypeAssignment_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getGroup_1_0()); }
		(rule__Method__Group_1_0__0)
		{ after(grammarAccess.getMethodAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getMethodAccess().getAlternatives_1_1()); }
		(rule__Method__Alternatives_1_1)
		{ after(grammarAccess.getMethodAccess().getAlternatives_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getComplexTypeAssignment_1_1_0()); }
		(rule__Method__ComplexTypeAssignment_1_1_0)
		{ after(grammarAccess.getMethodAccess().getComplexTypeAssignment_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getMethodAccess().getPrimTypeAssignment_1_1_1()); }
		(rule__Method__PrimTypeAssignment_1_1_1)
		{ after(grammarAccess.getMethodAccess().getPrimTypeAssignment_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getComplexTypeAssignment_0_0()); }
		(rule__Parameter__ComplexTypeAssignment_0_0)
		{ after(grammarAccess.getParameterAccess().getComplexTypeAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getParameterAccess().getPrimTypeAssignment_0_1()); }
		(rule__Parameter__PrimTypeAssignment_0_1)
		{ after(grammarAccess.getParameterAccess().getPrimTypeAssignment_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getParameterAccess().getGroup_0_2()); }
		(rule__Parameter__Group_0_2__0)
		{ after(grammarAccess.getParameterAccess().getGroup_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0_0()); }
		'.'
		{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getQualifiedNameAccess().getColonColonKeyword_1_0_1()); }
		'::'
		{ after(grammarAccess.getQualifiedNameAccess().getColonColonKeyword_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimTypeLiteral__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimTypeLiteralAccess().getBOOLEnumLiteralDeclaration_0()); }
		('bool')
		{ after(grammarAccess.getPrimTypeLiteralAccess().getBOOLEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimTypeLiteralAccess().getBYTEEnumLiteralDeclaration_1()); }
		('byte')
		{ after(grammarAccess.getPrimTypeLiteralAccess().getBYTEEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimTypeLiteralAccess().getSHORTEnumLiteralDeclaration_2()); }
		('short')
		{ after(grammarAccess.getPrimTypeLiteralAccess().getSHORTEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimTypeLiteralAccess().getINTEGEREnumLiteralDeclaration_3()); }
		('int')
		{ after(grammarAccess.getPrimTypeLiteralAccess().getINTEGEREnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getPrimTypeLiteralAccess().getLONGEnumLiteralDeclaration_4()); }
		('long')
		{ after(grammarAccess.getPrimTypeLiteralAccess().getLONGEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getPrimTypeLiteralAccess().getFLOATEnumLiteralDeclaration_5()); }
		('float')
		{ after(grammarAccess.getPrimTypeLiteralAccess().getFLOATEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getPrimTypeLiteralAccess().getDOUBLEEnumLiteralDeclaration_6()); }
		('double')
		{ after(grammarAccess.getPrimTypeLiteralAccess().getDOUBLEEnumLiteralDeclaration_6()); }
	)
	|
	(
		{ before(grammarAccess.getPrimTypeLiteralAccess().getSTRINGEnumLiteralDeclaration_7()); }
		('string')
		{ after(grammarAccess.getPrimTypeLiteralAccess().getSTRINGEnumLiteralDeclaration_7()); }
	)
	|
	(
		{ before(grammarAccess.getPrimTypeLiteralAccess().getVOIDEnumLiteralDeclaration_8()); }
		('void')
		{ after(grammarAccess.getPrimTypeLiteralAccess().getVOIDEnumLiteralDeclaration_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getIncludesAssignment_0()); }
	(rule__Model__IncludesAssignment_0)*
	{ after(grammarAccess.getModelAccess().getIncludesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getOptionsAssignment_1()); }
	(rule__Model__OptionsAssignment_1)?
	{ after(grammarAccess.getModelAccess().getOptionsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getPackageKeyword_2()); }
	'package'
	{ after(grammarAccess.getModelAccess().getPackageKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__3__Impl
	rule__Model__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getNameAssignment_3()); }
	(rule__Model__NameAssignment_3)
	{ after(grammarAccess.getModelAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__4__Impl
	rule__Model__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__5__Impl
	rule__Model__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getGroup_5()); }
	(rule__Model__Group_5__0)*
	{ after(grammarAccess.getModelAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getModelAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_5__0__Impl
	rule__Model__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getAlternatives_5_0()); }
	(rule__Model__Alternatives_5_0)
	{ after(grammarAccess.getModelAccess().getAlternatives_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getSemicolonKeyword_5_1()); }
	(';')?
	{ after(grammarAccess.getModelAccess().getSemicolonKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Include__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Include__Group__0__Impl
	rule__Include__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Include__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIncludeAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getIncludeAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Include__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Include__Group__1__Impl
	rule__Include__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Include__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIncludeAccess().getImportUriAssignment_1()); }
	(rule__Include__ImportUriAssignment_1)
	{ after(grammarAccess.getIncludeAccess().getImportUriAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Include__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Include__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Include__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIncludeAccess().getSemicolonKeyword_2()); }
	(';')?
	{ after(grammarAccess.getIncludeAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Options__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Options__Group__0__Impl
	rule__Options__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Options__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOptionsAccess().getOptionsKeyword_0()); }
	'options'
	{ after(grammarAccess.getOptionsAccess().getOptionsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Options__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Options__Group__1__Impl
	rule__Options__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Options__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOptionsAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getOptionsAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Options__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Options__Group__2__Impl
	rule__Options__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Options__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getOptionsAccess().getAlternatives_2()); }
		(rule__Options__Alternatives_2)
		{ after(grammarAccess.getOptionsAccess().getAlternatives_2()); }
	)
	(
		{ before(grammarAccess.getOptionsAccess().getAlternatives_2()); }
		(rule__Options__Alternatives_2)*
		{ after(grammarAccess.getOptionsAccess().getAlternatives_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Options__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Options__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Options__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOptionsAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getOptionsAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JavaOptions__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JavaOptions__Group__0__Impl
	rule__JavaOptions__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaOptions__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJavaOptionsAccess().getJavaKeyword_0()); }
	'java'
	{ after(grammarAccess.getJavaOptionsAccess().getJavaKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaOptions__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JavaOptions__Group__1__Impl
	rule__JavaOptions__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaOptions__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJavaOptionsAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getJavaOptionsAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaOptions__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JavaOptions__Group__2__Impl
	rule__JavaOptions__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaOptions__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJavaOptionsAccess().getBasePackageKeyword_2()); }
	'base-package'
	{ after(grammarAccess.getJavaOptionsAccess().getBasePackageKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaOptions__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JavaOptions__Group__3__Impl
	rule__JavaOptions__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaOptions__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJavaOptionsAccess().getEqualsSignKeyword_3()); }
	'='
	{ after(grammarAccess.getJavaOptionsAccess().getEqualsSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaOptions__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JavaOptions__Group__4__Impl
	rule__JavaOptions__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaOptions__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJavaOptionsAccess().getBasePackageAssignment_4()); }
	(rule__JavaOptions__BasePackageAssignment_4)
	{ after(grammarAccess.getJavaOptionsAccess().getBasePackageAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaOptions__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JavaOptions__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaOptions__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJavaOptionsAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getJavaOptionsAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CSharpOptions__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CSharpOptions__Group__0__Impl
	rule__CSharpOptions__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CSharpOptions__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCSharpOptionsAccess().getCsharpKeyword_0()); }
	'csharp'
	{ after(grammarAccess.getCSharpOptionsAccess().getCsharpKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CSharpOptions__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CSharpOptions__Group__1__Impl
	rule__CSharpOptions__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CSharpOptions__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCSharpOptionsAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getCSharpOptionsAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CSharpOptions__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CSharpOptions__Group__2__Impl
	rule__CSharpOptions__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CSharpOptions__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCSharpOptionsAccess().getBaseNamespaceKeyword_2()); }
	'base-namespace'
	{ after(grammarAccess.getCSharpOptionsAccess().getBaseNamespaceKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CSharpOptions__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CSharpOptions__Group__3__Impl
	rule__CSharpOptions__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CSharpOptions__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCSharpOptionsAccess().getEqualsSignKeyword_3()); }
	'='
	{ after(grammarAccess.getCSharpOptionsAccess().getEqualsSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CSharpOptions__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CSharpOptions__Group__4__Impl
	rule__CSharpOptions__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CSharpOptions__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCSharpOptionsAccess().getBaseNamespaceAssignment_4()); }
	(rule__CSharpOptions__BaseNamespaceAssignment_4)
	{ after(grammarAccess.getCSharpOptionsAccess().getBaseNamespaceAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CSharpOptions__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CSharpOptions__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CSharpOptions__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCSharpOptionsAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getCSharpOptionsAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CppOptions__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CppOptions__Group__0__Impl
	rule__CppOptions__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CppOptions__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCppOptionsAccess().getCppKeyword_0()); }
	'cpp'
	{ after(grammarAccess.getCppOptionsAccess().getCppKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CppOptions__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CppOptions__Group__1__Impl
	rule__CppOptions__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CppOptions__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCppOptionsAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getCppOptionsAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CppOptions__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CppOptions__Group__2__Impl
	rule__CppOptions__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CppOptions__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCppOptionsAccess().getBaseNamespaceKeyword_2()); }
	'base-namespace'
	{ after(grammarAccess.getCppOptionsAccess().getBaseNamespaceKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CppOptions__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CppOptions__Group__3__Impl
	rule__CppOptions__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CppOptions__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCppOptionsAccess().getEqualsSignKeyword_3()); }
	'='
	{ after(grammarAccess.getCppOptionsAccess().getEqualsSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CppOptions__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CppOptions__Group__4__Impl
	rule__CppOptions__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CppOptions__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCppOptionsAccess().getBaseNamespaceAssignment_4()); }
	(rule__CppOptions__BaseNamespaceAssignment_4)
	{ after(grammarAccess.getCppOptionsAccess().getBaseNamespaceAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CppOptions__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CppOptions__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CppOptions__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCppOptionsAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getCppOptionsAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Annotation__Group__0__Impl
	rule__Annotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationAccess().getCommercialAtKeyword_0()); }
	'@'
	{ after(grammarAccess.getAnnotationAccess().getCommercialAtKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Annotation__Group__1__Impl
	rule__Annotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationAccess().getNameAssignment_1()); }
	(rule__Annotation__NameAssignment_1)
	{ after(grammarAccess.getAnnotationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Annotation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationAccess().getGroup_2()); }
	(rule__Annotation__Group_2__0)?
	{ after(grammarAccess.getAnnotationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Annotation__Group_2__0__Impl
	rule__Annotation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationAccess().getEqualsSignKeyword_2_0()); }
	'='
	{ after(grammarAccess.getAnnotationAccess().getEqualsSignKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Annotation__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnotationAccess().getValueAssignment_2_1()); }
	(rule__Annotation__ValueAssignment_2_1)
	{ after(grammarAccess.getAnnotationAccess().getValueAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDecl__Group__0__Impl
	rule__StructDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclAccess().getDocAssignment_0()); }
	(rule__StructDecl__DocAssignment_0)?
	{ after(grammarAccess.getStructDeclAccess().getDocAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDecl__Group__1__Impl
	rule__StructDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclAccess().getAnnoAssignment_1()); }
	(rule__StructDecl__AnnoAssignment_1)*
	{ after(grammarAccess.getStructDeclAccess().getAnnoAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDecl__Group__2__Impl
	rule__StructDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclAccess().getStructKeyword_2()); }
	'struct'
	{ after(grammarAccess.getStructDeclAccess().getStructKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDecl__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDecl__Group__3__Impl
	rule__StructDecl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDecl__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclAccess().getNameAssignment_3()); }
	(rule__StructDecl__NameAssignment_3)
	{ after(grammarAccess.getStructDeclAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDecl__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDecl__Group__4__Impl
	rule__StructDecl__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDecl__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getStructDeclAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDecl__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDecl__Group__5__Impl
	rule__StructDecl__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDecl__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclAccess().getGroup_5()); }
	(rule__StructDecl__Group_5__0)*
	{ after(grammarAccess.getStructDeclAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDecl__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDecl__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDecl__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getStructDeclAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructDecl__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDecl__Group_5__0__Impl
	rule__StructDecl__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDecl__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclAccess().getMemberAssignment_5_0()); }
	(rule__StructDecl__MemberAssignment_5_0)
	{ after(grammarAccess.getStructDeclAccess().getMemberAssignment_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDecl__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDecl__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDecl__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclAccess().getSemicolonKeyword_5_1()); }
	(';')?
	{ after(grammarAccess.getStructDeclAccess().getSemicolonKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Member__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Member__Group__0__Impl
	rule__Member__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Member__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMemberAccess().getDocAssignment_0()); }
	(rule__Member__DocAssignment_0)?
	{ after(grammarAccess.getMemberAccess().getDocAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Member__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Member__Group__1__Impl
	rule__Member__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Member__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMemberAccess().getAnnoAssignment_1()); }
	(rule__Member__AnnoAssignment_1)*
	{ after(grammarAccess.getMemberAccess().getAnnoAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Member__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Member__Group__2__Impl
	rule__Member__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Member__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMemberAccess().getAlternatives_2()); }
	(rule__Member__Alternatives_2)
	{ after(grammarAccess.getMemberAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Member__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Member__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Member__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMemberAccess().getNameAssignment_3()); }
	(rule__Member__NameAssignment_3)
	{ after(grammarAccess.getMemberAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDecl__Group__0__Impl
	rule__EnumDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDeclAccess().getDocAssignment_0()); }
	(rule__EnumDecl__DocAssignment_0)?
	{ after(grammarAccess.getEnumDeclAccess().getDocAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDecl__Group__1__Impl
	rule__EnumDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDeclAccess().getEnumKeyword_1()); }
	'enum'
	{ after(grammarAccess.getEnumDeclAccess().getEnumKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDecl__Group__2__Impl
	rule__EnumDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDeclAccess().getNameAssignment_2()); }
	(rule__EnumDecl__NameAssignment_2)
	{ after(grammarAccess.getEnumDeclAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDecl__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDecl__Group__3__Impl
	rule__EnumDecl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDecl__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDeclAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getEnumDeclAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDecl__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDecl__Group__4__Impl
	rule__EnumDecl__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDecl__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getEnumDeclAccess().getGroup_4()); }
		(rule__EnumDecl__Group_4__0)
		{ after(grammarAccess.getEnumDeclAccess().getGroup_4()); }
	)
	(
		{ before(grammarAccess.getEnumDeclAccess().getGroup_4()); }
		(rule__EnumDecl__Group_4__0)*
		{ after(grammarAccess.getEnumDeclAccess().getGroup_4()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDecl__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDecl__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDecl__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDeclAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getEnumDeclAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDecl__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDecl__Group_4__0__Impl
	rule__EnumDecl__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDecl__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDeclAccess().getLiteralsAssignment_4_0()); }
	(rule__EnumDecl__LiteralsAssignment_4_0)
	{ after(grammarAccess.getEnumDeclAccess().getLiteralsAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDecl__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDecl__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDecl__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDeclAccess().getSemicolonKeyword_4_1()); }
	(';')?
	{ after(grammarAccess.getEnumDeclAccess().getSemicolonKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group__0__Impl
	rule__Literal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getDocAssignment_0()); }
	(rule__Literal__DocAssignment_0)?
	{ after(grammarAccess.getLiteralAccess().getDocAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group__1__Impl
	rule__Literal__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getNameAssignment_1()); }
	(rule__Literal__NameAssignment_1)
	{ after(grammarAccess.getLiteralAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getGroup_2()); }
	(rule__Literal__Group_2__0)?
	{ after(grammarAccess.getLiteralAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_2__0__Impl
	rule__Literal__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getEqualsSignKeyword_2_0()); }
	'='
	{ after(grammarAccess.getLiteralAccess().getEqualsSignKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literal__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralAccess().getValueAssignment_2_1()); }
	(rule__Literal__ValueAssignment_2_1)
	{ after(grammarAccess.getLiteralAccess().getValueAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListTypeDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListTypeDecl__Group__0__Impl
	rule__ListTypeDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTypeDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListTypeDeclAccess().getDocAssignment_0()); }
	(rule__ListTypeDecl__DocAssignment_0)?
	{ after(grammarAccess.getListTypeDeclAccess().getDocAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTypeDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListTypeDecl__Group__1__Impl
	rule__ListTypeDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTypeDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListTypeDeclAccess().getListKeyword_1()); }
	'List'
	{ after(grammarAccess.getListTypeDeclAccess().getListKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTypeDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListTypeDecl__Group__2__Impl
	rule__ListTypeDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTypeDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListTypeDeclAccess().getLessThanSignKeyword_2()); }
	'<'
	{ after(grammarAccess.getListTypeDeclAccess().getLessThanSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTypeDecl__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListTypeDecl__Group__3__Impl
	rule__ListTypeDecl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTypeDecl__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListTypeDeclAccess().getAlternatives_3()); }
	(rule__ListTypeDecl__Alternatives_3)
	{ after(grammarAccess.getListTypeDeclAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTypeDecl__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListTypeDecl__Group__4__Impl
	rule__ListTypeDecl__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTypeDecl__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListTypeDeclAccess().getGreaterThanSignKeyword_4()); }
	'>'
	{ after(grammarAccess.getListTypeDeclAccess().getGreaterThanSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTypeDecl__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListTypeDecl__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTypeDecl__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListTypeDeclAccess().getNameAssignment_5()); }
	(rule__ListTypeDecl__NameAssignment_5)
	{ after(grammarAccess.getListTypeDeclAccess().getNameAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interface__Group__0__Impl
	rule__Interface__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceAccess().getDocAssignment_0()); }
	(rule__Interface__DocAssignment_0)?
	{ after(grammarAccess.getInterfaceAccess().getDocAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interface__Group__1__Impl
	rule__Interface__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceAccess().getAnnoAssignment_1()); }
	(rule__Interface__AnnoAssignment_1)*
	{ after(grammarAccess.getInterfaceAccess().getAnnoAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interface__Group__2__Impl
	rule__Interface__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceAccess().getInterfaceKeyword_2()); }
	'interface'
	{ after(grammarAccess.getInterfaceAccess().getInterfaceKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interface__Group__3__Impl
	rule__Interface__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceAccess().getNameAssignment_3()); }
	(rule__Interface__NameAssignment_3)
	{ after(grammarAccess.getInterfaceAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interface__Group__4__Impl
	rule__Interface__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceAccess().getGroup_4()); }
	(rule__Interface__Group_4__0)?
	{ after(grammarAccess.getInterfaceAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interface__Group__5__Impl
	rule__Interface__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceAccess().getLeftCurlyBracketKeyword_5()); }
	'{'
	{ after(grammarAccess.getInterfaceAccess().getLeftCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interface__Group__6__Impl
	rule__Interface__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceAccess().getGroup_6()); }
	(rule__Interface__Group_6__0)*
	{ after(grammarAccess.getInterfaceAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interface__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getInterfaceAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interface__Group_4__0__Impl
	rule__Interface__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceAccess().getExtendsKeyword_4_0()); }
	'extends'
	{ after(grammarAccess.getInterfaceAccess().getExtendsKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interface__Group_4__1__Impl
	rule__Interface__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceAccess().getParentsAssignment_4_1()); }
	(rule__Interface__ParentsAssignment_4_1)
	{ after(grammarAccess.getInterfaceAccess().getParentsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interface__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceAccess().getGroup_4_2()); }
	(rule__Interface__Group_4_2__0)*
	{ after(grammarAccess.getInterfaceAccess().getGroup_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interface__Group_4_2__0__Impl
	rule__Interface__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceAccess().getCommaKeyword_4_2_0()); }
	','
	{ after(grammarAccess.getInterfaceAccess().getCommaKeyword_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interface__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceAccess().getParentsAssignment_4_2_1()); }
	(rule__Interface__ParentsAssignment_4_2_1)
	{ after(grammarAccess.getInterfaceAccess().getParentsAssignment_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Interface__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interface__Group_6__0__Impl
	rule__Interface__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceAccess().getMethodsAssignment_6_0()); }
	(rule__Interface__MethodsAssignment_6_0)
	{ after(grammarAccess.getInterfaceAccess().getMethodsAssignment_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interface__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceAccess().getSemicolonKeyword_6_1()); }
	(';')?
	{ after(grammarAccess.getInterfaceAccess().getSemicolonKeyword_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__0__Impl
	rule__Method__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getDocAssignment_0()); }
	(rule__Method__DocAssignment_0)?
	{ after(grammarAccess.getMethodAccess().getDocAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__1__Impl
	rule__Method__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getAlternatives_1()); }
	(rule__Method__Alternatives_1)
	{ after(grammarAccess.getMethodAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__2__Impl
	rule__Method__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getNameAssignment_2()); }
	(rule__Method__NameAssignment_2)
	{ after(grammarAccess.getMethodAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__3__Impl
	rule__Method__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getLeftParenthesisKeyword_3()); }
	'('
	{ after(grammarAccess.getMethodAccess().getLeftParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__4__Impl
	rule__Method__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getGroup_4()); }
	(rule__Method__Group_4__0)?
	{ after(grammarAccess.getMethodAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__5__Impl
	rule__Method__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getMethodAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getGroup_6()); }
	(rule__Method__Group_6__0)?
	{ after(grammarAccess.getMethodAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group_1_0__0__Impl
	rule__Method__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getReturnProxyTypeAssignment_1_0_0()); }
	(rule__Method__ReturnProxyTypeAssignment_1_0_0)
	{ after(grammarAccess.getMethodAccess().getReturnProxyTypeAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getAsteriskKeyword_1_0_1()); }
	'*'
	{ after(grammarAccess.getMethodAccess().getAsteriskKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group_4__0__Impl
	rule__Method__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getParametersAssignment_4_0()); }
	(rule__Method__ParametersAssignment_4_0)
	{ after(grammarAccess.getMethodAccess().getParametersAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getGroup_4_1()); }
	(rule__Method__Group_4_1__0)*
	{ after(grammarAccess.getMethodAccess().getGroup_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group_4_1__0__Impl
	rule__Method__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getCommaKeyword_4_1_0()); }
	','
	{ after(grammarAccess.getMethodAccess().getCommaKeyword_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getParametersAssignment_4_1_1()); }
	(rule__Method__ParametersAssignment_4_1_1)
	{ after(grammarAccess.getMethodAccess().getParametersAssignment_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group_6__0__Impl
	rule__Method__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getThrowsKeyword_6_0()); }
	'throws'
	{ after(grammarAccess.getMethodAccess().getThrowsKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group_6__1__Impl
	rule__Method__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getExceptionsAssignment_6_1()); }
	(rule__Method__ExceptionsAssignment_6_1)
	{ after(grammarAccess.getMethodAccess().getExceptionsAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getGroup_6_2()); }
	(rule__Method__Group_6_2__0)*
	{ after(grammarAccess.getMethodAccess().getGroup_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_6_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group_6_2__0__Impl
	rule__Method__Group_6_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_6_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getCommaKeyword_6_2_0()); }
	','
	{ after(grammarAccess.getMethodAccess().getCommaKeyword_6_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_6_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Method__Group_6_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_6_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodAccess().getExceptionsAssignment_6_2_1()); }
	(rule__Method__ExceptionsAssignment_6_2_1)
	{ after(grammarAccess.getMethodAccess().getExceptionsAssignment_6_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exception__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exception__Group__0__Impl
	rule__Exception__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exception__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExceptionAccess().getExceptionKeyword_0()); }
	'exception'
	{ after(grammarAccess.getExceptionAccess().getExceptionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exception__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exception__Group__1__Impl
	rule__Exception__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Exception__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExceptionAccess().getNameAssignment_1()); }
	(rule__Exception__NameAssignment_1)
	{ after(grammarAccess.getExceptionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exception__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exception__Group__2__Impl
	rule__Exception__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Exception__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExceptionAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getExceptionAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exception__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exception__Group__3__Impl
	rule__Exception__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Exception__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExceptionAccess().getGroup_3()); }
	(rule__Exception__Group_3__0)*
	{ after(grammarAccess.getExceptionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exception__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exception__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exception__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExceptionAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getExceptionAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exception__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exception__Group_3__0__Impl
	rule__Exception__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exception__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExceptionAccess().getMemberAssignment_3_0()); }
	(rule__Exception__MemberAssignment_3_0)
	{ after(grammarAccess.getExceptionAccess().getMemberAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exception__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exception__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exception__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExceptionAccess().getSemicolonKeyword_3_1()); }
	(';')?
	{ after(grammarAccess.getExceptionAccess().getSemicolonKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getAlternatives_0()); }
	(rule__Parameter__Alternatives_0)
	{ after(grammarAccess.getParameterAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getNameAssignment_1()); }
	(rule__Parameter__NameAssignment_1)
	{ after(grammarAccess.getParameterAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_0_2__0__Impl
	rule__Parameter__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getProxyTypeAssignment_0_2_0()); }
	(rule__Parameter__ProxyTypeAssignment_0_2_0)
	{ after(grammarAccess.getParameterAccess().getProxyTypeAssignment_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getAsteriskKeyword_0_2_1()); }
	'*'
	{ after(grammarAccess.getParameterAccess().getAsteriskKeyword_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
	(rule__QualifiedName__Group_1__0)*
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getAlternatives_1_0()); }
	(rule__QualifiedName__Alternatives_1_0)
	{ after(grammarAccess.getQualifiedNameAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__IncludesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getIncludesIncludeParserRuleCall_0_0()); }
		ruleInclude
		{ after(grammarAccess.getModelAccess().getIncludesIncludeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__OptionsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getOptionsOptionsParserRuleCall_1_0()); }
		ruleOptions
		{ after(grammarAccess.getModelAccess().getOptionsOptionsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__InterfacesAssignment_5_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getInterfacesInterfaceParserRuleCall_5_0_0_0()); }
		ruleInterface
		{ after(grammarAccess.getModelAccess().getInterfacesInterfaceParserRuleCall_5_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__TypesAssignment_5_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getTypesTypeDeclParserRuleCall_5_0_1_0()); }
		ruleTypeDecl
		{ after(grammarAccess.getModelAccess().getTypesTypeDeclParserRuleCall_5_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Include__ImportUriAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIncludeAccess().getImportUriSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getIncludeAccess().getImportUriSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Options__JavaOptionsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOptionsAccess().getJavaOptionsJavaOptionsParserRuleCall_2_0_0()); }
		ruleJavaOptions
		{ after(grammarAccess.getOptionsAccess().getJavaOptionsJavaOptionsParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Options__CsOptionsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOptionsAccess().getCsOptionsCSharpOptionsParserRuleCall_2_1_0()); }
		ruleCSharpOptions
		{ after(grammarAccess.getOptionsAccess().getCsOptionsCSharpOptionsParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Options__CppOptionsAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOptionsAccess().getCppOptionsCppOptionsParserRuleCall_2_2_0()); }
		ruleCppOptions
		{ after(grammarAccess.getOptionsAccess().getCppOptionsCppOptionsParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaOptions__BasePackageAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJavaOptionsAccess().getBasePackageQualifiedNameParserRuleCall_4_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getJavaOptionsAccess().getBasePackageQualifiedNameParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CSharpOptions__BaseNamespaceAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCSharpOptionsAccess().getBaseNamespaceQualifiedNameParserRuleCall_4_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getCSharpOptionsAccess().getBaseNamespaceQualifiedNameParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CppOptions__BaseNamespaceAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCppOptionsAccess().getBaseNamespaceQualifiedNameParserRuleCall_4_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getCppOptionsAccess().getBaseNamespaceQualifiedNameParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimTypeDecl__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimTypeDeclAccess().getNamePrimTypeLiteralEnumRuleCall_0()); }
		rulePrimTypeLiteral
		{ after(grammarAccess.getPrimTypeDeclAccess().getNamePrimTypeLiteralEnumRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotationAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getAnnotationAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__ValueAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnotationAccess().getValueSTRINGTerminalRuleCall_2_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getAnnotationAccess().getValueSTRINGTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDecl__DocAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructDeclAccess().getDocML_COMMENTTerminalRuleCall_0_0()); }
		RULE_ML_COMMENT
		{ after(grammarAccess.getStructDeclAccess().getDocML_COMMENTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDecl__AnnoAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructDeclAccess().getAnnoAnnotationParserRuleCall_1_0()); }
		ruleAnnotation
		{ after(grammarAccess.getStructDeclAccess().getAnnoAnnotationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDecl__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructDeclAccess().getNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getStructDeclAccess().getNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDecl__MemberAssignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructDeclAccess().getMemberMemberParserRuleCall_5_0_0()); }
		ruleMember
		{ after(grammarAccess.getStructDeclAccess().getMemberMemberParserRuleCall_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Member__DocAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMemberAccess().getDocML_COMMENTTerminalRuleCall_0_0()); }
		RULE_ML_COMMENT
		{ after(grammarAccess.getMemberAccess().getDocML_COMMENTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Member__AnnoAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMemberAccess().getAnnoAnnotationParserRuleCall_1_0()); }
		ruleAnnotation
		{ after(grammarAccess.getMemberAccess().getAnnoAnnotationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Member__ComplexTypeAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMemberAccess().getComplexTypeTypeDeclCrossReference_2_0_0()); }
		(
			{ before(grammarAccess.getMemberAccess().getComplexTypeTypeDeclQualifiedNameParserRuleCall_2_0_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getMemberAccess().getComplexTypeTypeDeclQualifiedNameParserRuleCall_2_0_0_1()); }
		)
		{ after(grammarAccess.getMemberAccess().getComplexTypeTypeDeclCrossReference_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Member__PrimTypeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMemberAccess().getPrimTypePrimTypeLiteralEnumRuleCall_2_1_0()); }
		rulePrimTypeLiteral
		{ after(grammarAccess.getMemberAccess().getPrimTypePrimTypeLiteralEnumRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Member__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMemberAccess().getNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getMemberAccess().getNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDecl__DocAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumDeclAccess().getDocML_COMMENTTerminalRuleCall_0_0()); }
		RULE_ML_COMMENT
		{ after(grammarAccess.getEnumDeclAccess().getDocML_COMMENTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDecl__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumDeclAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getEnumDeclAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDecl__LiteralsAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumDeclAccess().getLiteralsLiteralParserRuleCall_4_0_0()); }
		ruleLiteral
		{ after(grammarAccess.getEnumDeclAccess().getLiteralsLiteralParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__DocAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getDocML_COMMENTTerminalRuleCall_0_0()); }
		RULE_ML_COMMENT
		{ after(grammarAccess.getLiteralAccess().getDocML_COMMENTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getLiteralAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ValueAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getValueINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getLiteralAccess().getValueINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTypeDecl__DocAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListTypeDeclAccess().getDocML_COMMENTTerminalRuleCall_0_0()); }
		RULE_ML_COMMENT
		{ after(grammarAccess.getListTypeDeclAccess().getDocML_COMMENTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTypeDecl__ValueTypeAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListTypeDeclAccess().getValueTypeSingleTypeDeclCrossReference_3_0_0()); }
		(
			{ before(grammarAccess.getListTypeDeclAccess().getValueTypeSingleTypeDeclQualifiedNameParserRuleCall_3_0_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getListTypeDeclAccess().getValueTypeSingleTypeDeclQualifiedNameParserRuleCall_3_0_0_1()); }
		)
		{ after(grammarAccess.getListTypeDeclAccess().getValueTypeSingleTypeDeclCrossReference_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTypeDecl__PrimTypeAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListTypeDeclAccess().getPrimTypePrimTypeLiteralEnumRuleCall_3_1_0()); }
		rulePrimTypeLiteral
		{ after(grammarAccess.getListTypeDeclAccess().getPrimTypePrimTypeLiteralEnumRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTypeDecl__NameAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListTypeDeclAccess().getNameIDTerminalRuleCall_5_0()); }
		RULE_ID
		{ after(grammarAccess.getListTypeDeclAccess().getNameIDTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__DocAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfaceAccess().getDocML_COMMENTTerminalRuleCall_0_0()); }
		RULE_ML_COMMENT
		{ after(grammarAccess.getInterfaceAccess().getDocML_COMMENTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__AnnoAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfaceAccess().getAnnoAnnotationParserRuleCall_1_0()); }
		ruleAnnotation
		{ after(grammarAccess.getInterfaceAccess().getAnnoAnnotationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfaceAccess().getNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getInterfaceAccess().getNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__ParentsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfaceAccess().getParentsInterfaceCrossReference_4_1_0()); }
		(
			{ before(grammarAccess.getInterfaceAccess().getParentsInterfaceQualifiedNameParserRuleCall_4_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getInterfaceAccess().getParentsInterfaceQualifiedNameParserRuleCall_4_1_0_1()); }
		)
		{ after(grammarAccess.getInterfaceAccess().getParentsInterfaceCrossReference_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__ParentsAssignment_4_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfaceAccess().getParentsInterfaceCrossReference_4_2_1_0()); }
		(
			{ before(grammarAccess.getInterfaceAccess().getParentsInterfaceQualifiedNameParserRuleCall_4_2_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getInterfaceAccess().getParentsInterfaceQualifiedNameParserRuleCall_4_2_1_0_1()); }
		)
		{ after(grammarAccess.getInterfaceAccess().getParentsInterfaceCrossReference_4_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface__MethodsAssignment_6_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfaceAccess().getMethodsMethodParserRuleCall_6_0_0()); }
		ruleMethod
		{ after(grammarAccess.getInterfaceAccess().getMethodsMethodParserRuleCall_6_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__DocAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getDocML_COMMENTTerminalRuleCall_0_0()); }
		RULE_ML_COMMENT
		{ after(grammarAccess.getMethodAccess().getDocML_COMMENTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__ReturnProxyTypeAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getReturnProxyTypeInterfaceCrossReference_1_0_0_0()); }
		(
			{ before(grammarAccess.getMethodAccess().getReturnProxyTypeInterfaceIDTerminalRuleCall_1_0_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getMethodAccess().getReturnProxyTypeInterfaceIDTerminalRuleCall_1_0_0_0_1()); }
		)
		{ after(grammarAccess.getMethodAccess().getReturnProxyTypeInterfaceCrossReference_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__ComplexTypeAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getComplexTypeTypeDeclCrossReference_1_1_0_0()); }
		(
			{ before(grammarAccess.getMethodAccess().getComplexTypeTypeDeclQualifiedNameParserRuleCall_1_1_0_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getMethodAccess().getComplexTypeTypeDeclQualifiedNameParserRuleCall_1_1_0_0_1()); }
		)
		{ after(grammarAccess.getMethodAccess().getComplexTypeTypeDeclCrossReference_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__PrimTypeAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getPrimTypePrimTypeLiteralEnumRuleCall_1_1_1_0()); }
		rulePrimTypeLiteral
		{ after(grammarAccess.getMethodAccess().getPrimTypePrimTypeLiteralEnumRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getMethodAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__ParametersAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getParametersParameterParserRuleCall_4_0_0()); }
		ruleParameter
		{ after(grammarAccess.getMethodAccess().getParametersParameterParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__ParametersAssignment_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getParametersParameterParserRuleCall_4_1_1_0()); }
		ruleParameter
		{ after(grammarAccess.getMethodAccess().getParametersParameterParserRuleCall_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__ExceptionsAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getExceptionsExceptionParserRuleCall_6_1_0()); }
		ruleException
		{ after(grammarAccess.getMethodAccess().getExceptionsExceptionParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__ExceptionsAssignment_6_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodAccess().getExceptionsExceptionParserRuleCall_6_2_1_0()); }
		ruleException
		{ after(grammarAccess.getMethodAccess().getExceptionsExceptionParserRuleCall_6_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exception__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExceptionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getExceptionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exception__MemberAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExceptionAccess().getMemberMemberParserRuleCall_3_0_0()); }
		ruleMember
		{ after(grammarAccess.getExceptionAccess().getMemberMemberParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__ComplexTypeAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getComplexTypeTypeDeclCrossReference_0_0_0()); }
		(
			{ before(grammarAccess.getParameterAccess().getComplexTypeTypeDeclQualifiedNameParserRuleCall_0_0_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getParameterAccess().getComplexTypeTypeDeclQualifiedNameParserRuleCall_0_0_0_1()); }
		)
		{ after(grammarAccess.getParameterAccess().getComplexTypeTypeDeclCrossReference_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__PrimTypeAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getPrimTypePrimTypeLiteralEnumRuleCall_0_1_0()); }
		rulePrimTypeLiteral
		{ after(grammarAccess.getParameterAccess().getPrimTypePrimTypeLiteralEnumRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__ProxyTypeAssignment_0_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getProxyTypeInterfaceCrossReference_0_2_0_0()); }
		(
			{ before(grammarAccess.getParameterAccess().getProxyTypeInterfaceIDTerminalRuleCall_0_2_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getParameterAccess().getProxyTypeInterfaceIDTerminalRuleCall_0_2_0_0_1()); }
		)
		{ after(grammarAccess.getParameterAccess().getProxyTypeInterfaceCrossReference_0_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
