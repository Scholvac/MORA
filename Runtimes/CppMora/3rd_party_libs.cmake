
include(externalUtils)

if(WIN32)
	set(POCO_CMAKE cmake)
else(WIN32)
	set(POCO_CMAKE lib/cmake/Poco)
endif(WIN32)
if (CMAKE_COMPILER_IS_MINGW)
	set(sdk_bindir "C:/Program Files (x86)/Windows Kits/10/bin/10.0.16299.0/x86/" CACHE FILEPATH "")
	set(POCO_CONFIG_ARGS -Dsdk_bindir:FILEPATH=${sdk_bindir} -DENABLE_DATA_ODBC:BOOL=0 -DENABLE_DATA_SQLITE:BOOL=0 -DENABLE_ENCODINGS:BOOL=0 -DENABLE_PAGECOMPILER_FILE2PAGE:BOOL=0 -DENABLE_PAGECOMPILER:BOOL=0 -DENABLE_MONGODB:BOOL=0 -DENABLE_REDIS:BOOL=0 -DENABLE_DATA:BOOL=0 -DENABLE_DATA_MYSQL:BOOL=0  )
else()
	set(POCO_CONFIG_ARGS -DENABLE_DATA_ODBC:BOOL=0 -DENABLE_DATA_SQLITE:BOOL=0 -DENABLE_ENCODINGS:BOOL=0 -DENABLE_PAGECOMPILER_FILE2PAGE:BOOL=0 -DENABLE_PAGECOMPILER:BOOL=0 -DENABLE_MONGODB:BOOL=0 -DENABLE_REDIS:BOOL=0 -DENABLE_DATA:BOOL=0 -DENABLE_DATA_MYSQL:BOOL=0  )
endif()
FindOrInstall( NAME Poco 
	GIT_REPOSITORY https://github.com/pocoproject/poco.git 
	GIT_TAG master
	REL_CMAKE_PATH "${POCO_CMAKE}" 
	CMAKE_ARGS ${POCO_CONFIG_ARGS}
	COMPONENTS Foundation Net JSON Util 
)


if(BUILD_TESTING)
	enable_testing()
	include(CTest)
	
	set(DOCTEST_CONFIG_ARGS -DDOCTEST_WITH_MAIN_IN_STATIC_LIB:BOOL=0 -DDOCTEST_WITH_TESTS:BOOL=0)
	FindOrInstall(NAME doctest 
		GIT_REPOSITORY https://github.com/onqtam/doctest.git 
		GIT_TAG 2.3.6 
		REL_CMAKE_PATH lib/cmake/doctest 
		CMAKE_ARGS ${DOCTEST_CONFIG_ARGS}
	)
	
	include(UseDocTest)
	set(DOCTEST_INCLUDE_DIR "${INS_DIR}/include/")
endif(BUILD_TESTING)


if (BUILD_BENCHMARKS)
	set(GBENCHMARK_ARGS -DBENCHMARK_ENABLE_TESTING:BOOL=0 -DBENCHMARK_ENABLE_GTEST_TESTS:BOOL=0) 
	FindOrInstall(NAME benchmark
		GIT_REPOSITORY https://github.com/google/benchmark.git
		GIT_TAG master
		REL_CMAKE_PATH lib/cmake/benchmark
		CMAKE_ARGS ${GBENCHMARK_ARGS}
	)
	include(UseGoogleBenchmark)
endif(BUILD_BENCHMARKS)
